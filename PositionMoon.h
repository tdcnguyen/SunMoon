/*
 *  PositionMoon.h
 *  SunMoon
 *
 *  Created by Duy Cuong Nguyen on 2005-06-05.
 *  Copyright 2005 __MyCompanyName__. All rights reserved.
 *
 */

#ifndef PositionMoon_h
#define PositionMoon_h

#define TABLE47A_SIZE 60
#define TABLE47B_SIZE 60

class PositionMoon
{
public:
	static double calcApparentDecInDeg(double jde);
	static double calcApparentLatitudeInDeg(double jde);
	static double calcApparentLongitudeInDeg(double jde);
	static double calcApparentRAInDeg(double jde);
	static double calcDistanceInKm(double jde);
	static double calcGeocentricLatitudeInDeg(double jde);
	static double calcGeocentricLongitudeInDeg(double jde);
	static double calcHorizontalParallaxInDeg(double jde);
};

namespace PositionMoonNs
{
	const int argumentTableA[TABLE47A_SIZE][4] =
	{{0, 0, 1, 0},
	{2, 0, -1, 0},
	{2, 0, 0, 0},
	{0, 0, 2, 0},
	{0, 1, 0, 0},
	{0, 0, 0, 2},
	{2, 0, -2, 0},
	{2, -1, -1, 0},
	{2, 0, 1, 0},
	{2, -1, 0, 0},
	{0, 1, -1, 0},
	{1, 0, 0, 0},
	{0, 1, 1, 0},
	{2, 0, 0, -2},
	{0, 0, 1, 2},
	{0, 0, 1, -2},
	{4, 0, -1, 0},
	{0, 0, 3, 0},
	{4, 0, -2, 0},
	{2, 1, -1, 0},
	{2, 1, 0, 0},
	{1, 0, -1, 0},
	{1, 1, 0, 0},
	{2, -1, 1, 0},
	{2, 0, 2, 0},
	{4, 0, 0, 0},
	{2, 0, -3, 0},
	{0, 1, -2, 0},
	{2, 0, -1, 2},
	{2, -1, -2, 0},
	{1, 0, 1, 0},
	{2, -2, 0, 0},
	{0, 1, 2, 0},
	{0, 2, 0, 0},
	{2, -2, -1, 0},
	{2, 0, 1, -2},
	{2, 0, 0, 2},
	{4, -1, -1, 0},
	{0, 0, 2, 2},
	{3, 0, -1, 0},
	{2, 1, 1, 0},
	{4, -1, -2, 0},
	{0, 2, -1, 0},
	{2, 2, -1, 0},
	{2, 1, -2, 0},
	{2, -1, 0, -2},
	{4, 0, 1, 0},
	{0, 0, 4, 0},
	{4, -1, 0, 0},
	{1, 0, -2, 0},
	{2, 1, 0, -2},
	{0, 0, 2, -2},
	{1, 1, 1, 0},
	{3, 0, -2, 0},
	{4, 0, -3, 0},
	{2, -1, 2, 0},
	{0, 2, 1, 0},
	{1, 1, -1, 0},
	{2, 0, 3, 0},
	{2, 0, -1, -2}};

	const int argumentTableB[TABLE47B_SIZE][4] =
	{{0, 0, 0, 1},
	{0, 0, 1, 1},
	{0, 0, 1, -1},
	{2, 0, 0, -1},
	{2, 0, -1, 1},
	{2, 0, -1, -1},
	{2, 0, 0, 1},
	{0, 0, 2, 1},
	{2, 0, 1, -1},
	{0, 0, 2, -1},
	{2, -1, 0, -1},
	{2, 0, -2, -1},
	{2, 0, 1, 1},
	{2, 1, 0, -1},
	{2, -1, -1, 1},
	{2, -1, 0, 1},
	{2, -1, -1, -1},
	{0, 1, -1, -1},
	{4, 0, -1, -1},
	{0, 1, 0, 1},
	{0, 0, 0, 3},
	{0, 1, -1, 1},
	{1, 0, 0, 1},
	{0, 1, 1, 1},
	{0, 1, 1, -1},
	{0, 1, 0, -1},
	{1, 0, 0, -1},
	{0, 0, 3, 1},
	{4, 0, 0, -1},
	{4, 0, -1, 1},
	{0, 0, 1, -3},
	{4, 0, -2, 1},
	{2, 0, 0, -3},
	{2, 0, 2, -1},
	{2, -1, 1, -1},
	{2, 0, -2, 1},
	{0, 0, 3, -1},
	{2, 0, 2, 1},
	{2, 0, -3, -1},
	{2, 1, -1, 1},
	{2, 1, 0, 1},
	{4, 0, 0, 1},
	{2, -1, 1, 1},
	{2, -2, 0, -1},
	{0, 0, 1, 3},
	{2, 1, 1, -1},
	{1, 1, 0, -1},
	{1, 1, 0, 1},
	{0, 1, -2, -1},
	{2, 1, -1, -1},
	{1, 0, 1, 1},
	{2, -1, -2, -1},
	{0, 1, 2, 1},
	{4, 0, -2, -1},
	{4, -1, -1, -1},
	{1, 0, 1, -1},
	{4, 0, 1, -1},
	{1, 0, -1, -1},
	{4, -1, 0, -1},
	{2, -2, 0, 1}};

	const int coeffSinL[TABLE47A_SIZE] =
	{6288774,
	1274027,
	658314,
	213618,
	-185116,
	-114332,
	58793,
	57066,
	53322,
	45758,
	-40923,
	-34720,
	-30383,
	15327,
	-12528,
	10980,
	10675,
	10034,
	8548,
	-7888,
	-6766,
	-5163,
	4987,
	4036,
	3994,
	3861,
	3665,
	-2689,
	-2602,
	2390,
	-2348,
	2236,
	-2120,
	-2069,
	2048,
	-1773,
	-1595,
	1215,
	-1110,
	-892,
	-810,
	759,
	-713,
	-700,
	691,
	596,
	549,
	537,
	520,
	-487,
	-399,
	-381,
	351,
	-340,
	330,
	327,
	-323,
	299,
	294,
	0};
	
	const int coeffCosR[TABLE47A_SIZE] =
	{-20905355,
	-3699111,
	-2955968,
	-569925,
	48888,
	-3149,
	246158,
	-152138,
	-170733,
	-204586,
	-129620,
	108743,
	104755,
	10321,
	0,
	79661,
	-34782,
	-23210,
	-21636,
	24208,
	30824,
	-8379,
	-16675,
	-12831,
	-10445,
	-11650,
	14403,
	-7003,
	0,
	10056,
	6322,
	-9884,
	5751,
	0,
	-4950,
	4130,
	0,
	-3958,
	0,
	3258,
	2616,
	-1897,
	-2117,
	2354,
	0,
	0,
	-1423,
	-1117,
	-1571,
	-1739,
	0,
	-4421,
	0,
	0,
	0,
	0,
	1165,
	0,
	0,
	8752};

	const int coeffSinB[TABLE47B_SIZE] =
	{5128122,
	280602,
	277693,
	173237,
	55413,
	46271,
	32573,
	17198,
	9266,
	8822,
	8216,
	4324,
	4200,
	-3359,
	2463,
	2211,
	2065,
	-1870,
	1828,
	-1794,
	-1749,
	-1565,
	-1491,
	-1475,
	-1410,
	-1344,
	-1335,
	1107,
	1021,
	833,
	777,
	671,
	607,
	596,
	491,
	-451,
	439,
	422,
	421,
	-366,
	-351,
	331,
	315,
	302,
	-283,
	-229,
	223,
	223,
	-220,
	-220,
	-185,
	181,
	-177,
	176,
	166,
	-164,
	132,
	-119,
	115,
	107};
}

#endif // PositionMoon_h